apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: shopping
  name: shopping-client
  labels:
    app: shopping-client
    project-id: shopping-client-3a1d38c2-b138-d18c-f721-982092417b8a
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      service: shopping-client
      project-id: shopping-client-3a1d38c2-b138-d18c-f721-982092417b8a
  template:
    metadata:
      labels:
        app: shopping-client
        service: shopping-client
        project-id: shopping-client-3a1d38c2-b138-d18c-f721-982092417b8a
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'shopping-client'
        vault.hashicorp.com/agent-inject-secret-env: 'secret/data/shopping-client'
        vault.hashicorp.com/agent-inject-template-env: |
          {{ with secret "secret/data/shopping-client" }}
          {{ range $k, $v := .Data.data }}
          {{ $k }}='{{ $v }}'
          {{ end }}
          {{ end }}
    spec:
      serviceAccountName: shopping-client
      imagePullSecrets:
      - name: shopping-client-registry-secret
      volumes:
      - name: config-volume
        configMap:
          name: shopping-client-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: shopping-client
          image: docker.io/cahityusuf/shopping-client:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              set +x
                if [ -f /vault/secrets/env ]; then
                    grep -v '^#' /vault/secrets/env | sed 's/^/export /' > /tmp/formatted_env
                    . /tmp/formatted_env >/dev/null 2>&1
                fi
                exec dotnet Shopping.Client.dll
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - FOWNER
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                - FSETID
                - NET_BIND_SERVICE
            fsGroup: 1000
          resources:
            requests:
              memory: 512Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1
          envFrom:
            - configMapRef:
                name: shopping-client-config
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config   